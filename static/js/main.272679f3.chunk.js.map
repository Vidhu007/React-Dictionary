{"version":3,"sources":["components/Definitions/Definitions.js","data/category.js","components/Header/Header.js","App.js","index.js"],"names":["Definitions","meanings","word","LightTheme","category","className","style","backgroundColor","borderRadius","src","phonetics","audio","controls","map","mean","item","definitions","def","color","definition","width","example","synonyms","s","categories","value","label","Header","setCategory","setWord","darkTheme","createMuiTheme","palette","primary","main","type","ThemeProvider","theme","TextField","id","variant","onChange","e","target","select","Language","option","MenuItem","App","useState","setMeanings","setLightTheme","dictionaryApi","a","axios","get","data","console","log","useEffect","PurpleSwitch","withStyles","switchBase","grey","checked","track","Switch","height","transition","Container","maxWidth","display","flexDirection","justifyContent","position","top","right","paddingTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.272679f3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Definitions.css\";\n\nconst Definitions = ({ meanings, word, LightTheme, category }) => {\n  return (\n    <div className=\"meanings\">\n      {/* audio---------------------------- */}\n      {meanings[0] && word && category === \"en\" && (\n        <audio\n          style={{ backgroundColor: \"#fff\", borderRadius: 10 }}\n          src={meanings[0].phonetics[0] && meanings[0].phonetics[0].audio}\n          controls\n        >\n          Your browser does not support the audio element.\n        </audio>\n      )}\n      {/* audio---------------------------- */}\n\n      {word === \"\" ? (\n        <span className=\"subTitle\">Start by typing a word in search</span>\n      ) : (\n        meanings.map((mean) =>\n          mean.meanings.map((item) =>\n            item.definitions.map((def) => (\n              <div\n                className=\"singleMean\"\n                style={{\n                  backgroundColor: LightTheme ? \"#3b5360\" : \"white\",\n                  color: LightTheme ? \"white\" : \"black\",\n                }}\n              >\n                <b>{def.definition}</b>\n                <hr style={{ backgroundColor: \"black\", width: \"100%\" }} />\n                {def.example && (\n                  <span>\n                    <b>Example :</b> {def.example}\n                  </span>\n                )}\n                {def.synonyms && (\n                  <span>\n                    <b>Synonyms :</b> {def.synonyms.map((s) => `${s}, `)}\n                  </span>\n                )}\n              </div>\n            ))\n          )\n        )\n      )}\n    </div>\n  );\n};\n\nexport default Definitions;","const categories = [\n    { value: \"English\", label: \"en\" },\n    { value: \"Hindi\", label: \"hi\" },\n    { value: \"Spanish\", label: \"es\" },\n    { value: \"French\", label: \"fr\" },\n    { value: \"Japanese\", label: \"ja\" },\n    { value: \"Russian\", label: \"ru\" },\n    { value: \"German\", label: \"de\" },\n    { value: \"Italian\", label: \"it\" },\n    { value: \"Korean\", label: \"ko\" },\n    { value: \"Brazilian Portuguese\", label: \"pt-BR\" },\n    { value: \"Arabic\", label: \"ar\" },\n    { value: \"Turkish\", label: \"tr\" },\n  ];\n  \n  export default categories;","import React from 'react'\nimport './Header.css';\nimport {createMuiTheme, MenuItem, TextField,ThemeProvider} from '@material-ui/core';\nimport categories from '../../data/category';\n\nconst Header = ({category,setCategory,word,setWord}) => {\n    const darkTheme = createMuiTheme({\n        palette: {\n          primary: {\n            main: \"#fff\",\n          },\n          type: \"dark\",\n        },\n      });\n    \n    const handleChange = (Language)=>{\n      setCategory(Language);\n      setWord(\"\");\n    }\n    return (\n        <div className=\"header\">\n            <span className=\"title\">{word?word:\"Dictionary\"}</span>\n            <div className=\"inputs\">\n               <ThemeProvider theme={darkTheme}>\n\n               <TextField className=\"search\" id=\"standard-basic\" label=\"word\" variant=\"standard\" value={word} onChange={(e)=>setWord(e.target.value)}/>\n\n               <TextField className=\"select\"\n          id=\"standard-select-currency\"\n          select\n          label=\"Language\"\n          value= {category}\n          onChange = {(e)=>handleChange(e.target.value)}\n        >\n            {\n                categories.map((option)=> {\n                  return <MenuItem key={option.label} value={option.label}>{option.value}</MenuItem>\n\n                })\n            }\n        </TextField>\n</ThemeProvider>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import { Container, Switch, withStyles } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Definitions from \"./components/Definitions/Definitions\";\nimport Header from \"./components/Header/Header\";\n\nfunction App() {\n  const [word, setWord] = useState(\"\");\n  const [meanings, setMeanings] = useState([]);\n  const [category, setCategory] = useState(\"en\");\n  const [LightTheme, setLightTheme] = useState(false);\n\n  const dictionaryApi = async () => {\n    try {\n      const data = await axios.get(\n        `https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`\n      );\n      setMeanings(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(meanings);\n\n  useEffect(() => {\n    dictionaryApi();\n    // eslint-disable-next-line\n  }, [word, category]);\n\n  const PurpleSwitch = withStyles({\n    switchBase: {\n      color: grey[50],\n      \"&$checked\": {\n        color: grey[900],\n      },\n      \"&$checked + $track\": {\n        backgroundColor: grey[500],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        height: \"100vh\",\n        backgroundColor: LightTheme ? \"#fff\" : \"#282c34\",\n        color: LightTheme ? \"black\" : \"white\",\n        transition: \"all 0.5s linear\",\n      }}\n    >\n      <Container\n        maxWidth=\"md\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"100vh\",\n          justifyContent: \"space-evenly\",\n        }}\n      >\n        <div\n          style={{ position: \"absolute\", top: 0, right: 15, paddingTop: 10 }}\n        >\n          <span>{LightTheme ? \"Dark\" : \"Light\"} Mode</span>\n          <PurpleSwitch\n            checked={LightTheme}\n            onChange={() => setLightTheme(!LightTheme)}\n          />\n        </div>\n        <Header\n          setWord={setWord}\n          category={category}\n          setCategory={setCategory}\n          word={word}\n          setMeanings={setMeanings}\n          LightTheme={LightTheme}\n        />\n        {meanings && (\n          <Definitions\n            meanings={meanings}\n            word={word}\n            LightTheme={LightTheme}\n            category={category}\n          />\n        )}\n      </Container>\n    \n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}